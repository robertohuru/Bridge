/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package views;

import controllers.ContactInfo;
import controllers.DraftInfo;
import controllers.GroupInfo;
import controllers.GroupMembers;
import controllers.OutboxInfo;
import java.awt.Frame;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JDesktopPane;
import javax.swing.JOptionPane;
import javax.swing.SwingWorker;
import models.ContactModel;
import models.DraftModel;
import models.GroupModel;
import sms.Main;

/**
 *
 * @author DELL
 */
public class NewMessage extends javax.swing.JInternalFrame {

    /**
     * Creates new form NewMessage
     */
    private JDesktopPane parent;
    private Worker worker;
    private StatusDialog dialog;
    private String text;
    private OutboxInfo outbox;
    private DraftInfo draft;
    private GroupMembers members;
    private GroupInfo group;
    public NewMessage(JDesktopPane parent) {
        this.parent = parent;
        text = "Please Wait. Sending Message...........";        
        initComponents();
        this.setSize(parent.getWidth(), parent.getHeight());
    }

    public NewMessage(JDesktopPane parent, OutboxInfo outbox) {
        this(parent);
        this.outbox = outbox;
        this.setTitle("Forward Message");
        taMessage.setText(outbox.getMessage());
    }
    public NewMessage(JDesktopPane parent, DraftInfo outbox) {
        this(parent);
        this.draft = outbox;
        ContactInfo info = new ContactModel().getPerson(outbox.getReciever().trim());
        String name = outbox.getReciever().trim();
        if(info != null){
            name = info.getFirstName()+" "+info.getLastName().toUpperCase();
        }
        this.setTitle("Send Message to "+name);
        taContacts.setText(outbox.getReciever().trim());
        taMessage.setText(outbox.getMessage());
    }
    public NewMessage(JDesktopPane parent, GroupMembers outbox) {
        this(parent);
        this.members = outbox;
        ContactInfo info = new ContactModel().getPerson(outbox.getContact().trim());
        String name = outbox.getContact().trim();
        if(info != null){
            name = info.getFirstName()+" "+info.getLastName().toUpperCase();
        }
        this.setTitle("Send Message to "+name);
        taContacts.setText(outbox.getContact().trim());
        panelR.setVisible(false);
        this.setSize(540, 343);
    }
    
    public NewMessage(JDesktopPane parent, GroupInfo group) {
        this(parent);
        this.group = group;
        GroupMembers[] members = new GroupModel().getGroupMembers(group);
        StringBuffer buf = new StringBuffer();
        String newLine = System.getProperty("line.separator");
        for(int i=0 ; i< members.length; i++){
            buf.append(members[i].getContact().trim()+newLine);
        }
        taContacts.setText(buf.toString());
        this.setTitle("Send Message to "+group.getName().toUpperCase()+" Group members");
        panelR.setVisible(false);
        this.setSize(540, 343);
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        taMessage = new javax.swing.JTextArea();
        btnSend = new javax.swing.JButton();
        lblMessage = new javax.swing.JLabel();
        lblNumber = new javax.swing.JLabel();
        panelR = new javax.swing.JPanel();
        btnClear = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        cbkContacts = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        taContacts = new javax.swing.JTextArea();
        btnClose = new javax.swing.JButton();

        setBorder(new javax.swing.border.LineBorder(java.awt.Color.darkGray, 1, true));
        setClosable(true);
        setIconifiable(true);
        setTitle("New Message");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/write_message.png"))); // NOI18N

        jLabel2.setText("Message");

        taMessage.setColumns(20);
        taMessage.setLineWrap(true);
        taMessage.setRows(5);
        taMessage.setToolTipText("Enter the Message here");
        taMessage.setWrapStyleWord(true);
        taMessage.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                taMessageKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                taMessageKeyTyped(evt);
            }
        });
        jScrollPane2.setViewportView(taMessage);

        btnSend.setText("Send");
        btnSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendActionPerformed(evt);
            }
        });

        lblNumber.setText("Number of words is: 0");

        btnClear.setText("Clear Reciepients");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        jLabel1.setText("Recepients *");

        cbkContacts.setText("All From Contacts");
        cbkContacts.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbkContactsActionPerformed(evt);
            }
        });

        taContacts.setColumns(20);
        taContacts.setLineWrap(true);
        taContacts.setRows(5);
        taContacts.setToolTipText("Enter the recepients");
        taContacts.setWrapStyleWord(true);
        jScrollPane1.setViewportView(taContacts);

        javax.swing.GroupLayout panelRLayout = new javax.swing.GroupLayout(panelR);
        panelR.setLayout(panelRLayout);
        panelRLayout.setHorizontalGroup(
            panelRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbkContacts)
                    .addGroup(panelRLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        panelRLayout.setVerticalGroup(
            panelRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelRLayout.createSequentialGroup()
                        .addComponent(cbkContacts)
                        .addGroup(panelRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelRLayout.createSequentialGroup()
                                .addGap(7, 7, 7)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelRLayout.createSequentialGroup()
                                .addGap(65, 65, 65)
                                .addComponent(btnClear))))
                    .addGroup(panelRLayout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39)))
                .addContainerGap())
        );

        btnClose.setText("Close");
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnSend, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(132, 132, 132)
                                .addComponent(btnClose, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(11, 11, 11))
                            .addComponent(lblNumber, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane2)
                            .addComponent(lblMessage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(panelR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(4, 4, 4))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panelR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblNumber)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(74, 74, 74)
                        .addComponent(jLabel2)))
                .addGap(17, 17, 17)
                .addComponent(lblMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSend)
                    .addComponent(btnClose))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        // TODO add your handling code here:
        taContacts.setText("");
        cbkContacts.setSelected(false);
    }//GEN-LAST:event_btnClearActionPerformed

    class Worker extends SwingWorker<Integer, String> {

        private JButton button;
        private String action = "";

        public Worker(JButton button) {
            this.button = button;

        }

        @Override
        protected Integer doInBackground() throws Exception {
            action = button.getActionCommand();
            System.out.println(action);
            if (action.equalsIgnoreCase("Send")) {
                sendMessage();
            }
            failIfInterrupted();
            return 1;
        }

        @Override
        public void done() {

        }

        private void failIfInterrupted() throws InterruptedException {
            if (Thread.currentThread().isInterrupted()) {
                throw new InterruptedException("Interrupted while working..");
            }
        }
    }

    private void sendMessage() {

        //sms.Main.setModemSettings(tfPort.toUpperCase(), tfCenter, tfPin);
        String[] contacts = taContacts.getText().split("\n");
        try {
            Main.sendMessage(taMessage.getText(), contacts, lblMessage);
            new DraftModel().delete(draft);
            //Main.close(tfPort);
        } catch (Exception ex) {
            Logger.getLogger(NewMessage.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void send() {
        dialog = new StatusDialog((Frame) this.getTopLevelAncestor(), text);
        worker = new Worker(btnSend);
        worker.addPropertyChangeListener(new PropertyChangeListener() {

            @Override
            public void propertyChange(final PropertyChangeEvent event) {
                switch (event.getPropertyName()) {
                    case "progress":
                        break;
                    case "state":
                        switch ((SwingWorker.StateValue) event.getNewValue()) {
                            case DONE:
                                worker = null;
                                dialog.setVisible(false);
                                dialog.dispose();
                                break;
                            case STARTED:
                            case PENDING:
                                dialog.setVisible(true);

                                break;
                        }
                        break;
                }
            }
        });
        worker.execute();
    }

    private void btnSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendActionPerformed
        // TODO add your handling code here:
        if (!taContacts.getText().isEmpty()) {
            if (worker == null) {
                send();
            } else {
                worker.cancel(true);
            }
        }else{
            JOptionPane.showMessageDialog(null, "Please Enter at least one contact in the reciepient's list !", "Error Message", JOptionPane.ERROR_MESSAGE);
        }


    }//GEN-LAST:event_btnSendActionPerformed

    private void taMessageKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_taMessageKeyTyped
        // TODO add your handling code here:

    }//GEN-LAST:event_taMessageKeyTyped

    private void taMessageKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_taMessageKeyReleased
        // TODO add your handling code here:
        int length = taMessage.getText().length();
        lblNumber.setText("Number of words is: " + length);
    }//GEN-LAST:event_taMessageKeyReleased

    private void cbkContactsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbkContactsActionPerformed
        // TODO add your handling code here:
        ContactInfo[] contact = new ContactModel().getContacts();
        if (cbkContacts.isSelected()) {
            StringBuffer buf = new StringBuffer();
            for (int i = 0; i < contact.length; i++) {
                String newLine = System.getProperty("line.separator");
                String con = contact[i].getMobNumber() + newLine;
                buf.append(con);
            }
            
            taContacts.setText(buf.toString());

        } else {
            taContacts.setText("");
        }

    }//GEN-LAST:event_cbkContactsActionPerformed

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btnCloseActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnSend;
    private javax.swing.JCheckBox cbkContacts;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblMessage;
    private javax.swing.JLabel lblNumber;
    private javax.swing.JPanel panelR;
    private javax.swing.JTextArea taContacts;
    private javax.swing.JTextArea taMessage;
    // End of variables declaration//GEN-END:variables
}
